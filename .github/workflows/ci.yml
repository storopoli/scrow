name: CI

env:
  CARGO_TERM_COLOR: always
  DIOXUS_VERSION: 0.6.3

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: cargo-${{ runner.os }}-formatting-v4-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-formatting-v4-
            cargo-${{ runner.os }}-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: |
          cargo fmt -- --check

  dioxus-format:
    name: Check Dioxus formatting
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: cargo-${{ runner.os }}-rust-dioxus-v2-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-rust-dioxus-v2-
              cargo-${{ runner.os }}-

      - name: Install Dioxus
        run: cargo install dioxus-cli@${{ env.DIOXUS_VERSION }} --force

      - name: Check Dioxus formatting
        run: dx fmt --check

  docs:
    name: Check docs
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-docs-v4-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-docs-v4-
            cargo-${{ runner.os }}-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Check rustdocs
        run: |
          cargo doc --workspace --no-deps
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-tests-v4-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-tests-v4-
            cargo-${{ runner.os }}-

      - name: Install latest nextest release
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run tests
        run: |
          cargo nextest r --all-targets

  clippy:
    name: Clippy lints
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-rust-clippy-v4-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-rust-clippy-v4-
            cargo-${{ runner.os }}-

      - name: Clippy lints
        run: cargo clippy --tests --all-targets -- -D warnings
